This started an experiment to put a state's actions into superfastmatch and extrapolate what kinds of actions are available and how they might vary (variables, parameters).

That proved mostly useless, and I'm still obsessed the idea of automatically deriving action templates from a state's actions, but now bathawk has contented itself with providing a specialized shell for testing regexs on actions, viewing actions and Open States categories, and maybe being a test bed for developing more reusable action categorizing/parsing code.

Right now the batshell loads all actions categorized as "other" and you can test regular expressions against those to see what matches, but it was initially designed to load all actions, test regexes on them, then add the regexes to a collection that could ultimately be saved, written out to a file, or even used to generate a module with some python code. The thinking was that it could provided an experience almost like a game, where we could keep adding regexes and watch the number of unmatched actions drop lower and lower until most actions for a state were being matched, and maybe specifically parsed or categtorized in some useful way.
